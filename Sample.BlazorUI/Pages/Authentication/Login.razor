@page "/"
@page "/login"
@using Sample.DTOS
@layout LogInLayout
@inject IAuthRepository _authRepo
@inject ISnackbar Snackbar
@inject NavigationManager _navManager

<MudForm Model="@model" @ref="form" ValidationDelay="0">

    <MudText Typo="Typo.h4" GutterBottom="true">Sign In</MudText>

    <MudText>Don't have an account? <MudLink Href="/Authentication/SignUp">Sign Up</MudLink></MudText>

    <MudTextField T="string" @bind-Value="model.Email" Label="E-mail" Variant="Variant.Outlined" Class="my-6" For="@(() => model.Email)" Required="true" />

    <MudTextField T="string" @bind-Value="model.Password" Label="Password" Variant="Variant.Outlined" Adornment="Adornment.End" For="@(() => model.Password)" Required="true" />

    <div Class="d-flex justify-space-between align-center">
      @*   <MudLink Href="/pages/authentication/forgot-password">Forgot pwd?</MudLink> *@
    </div>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" class="mt-5" OnClick="HandleLogin" Size="Size.Large" FullWidth="true">Sign In</MudButton>
</MudForm>

@code {
    private MudForm form;
    private LoginDTO model = new LoginDTO();
    private bool response = true;

    private async Task HandleLogin()
    {
        await form.Validate();
        if (form.IsValid)
        {
            response = await _authRepo.Login(model);

            if (response)
            {
                Snackbar.Add("Login successfully!.", MudBlazor.Severity.Success);
                _navManager.NavigateTo("/cardlist");
            }
            else
            {
                Snackbar.Add("Please provide a valid email and password!.", MudBlazor.Severity.Warning);
            }
        }
        else
        {
            Snackbar.Add("Validation errors occurred. Please check your input.", MudBlazor.Severity.Error);
        }
    }
}
