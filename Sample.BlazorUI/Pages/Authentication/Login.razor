@page "/"

@page "/login"

@layout LogInLayout


@using Microsoft.AspNetCore.Authentication;
@using Microsoft.AspNetCore.Identity;
@using Sample.BlazorUI.DTO;
@using Sample.BlazorUI.EndPoint;
@inject NavigationManager _nav
@inject IAuthRepository _authRepo
@inject AuthenticationStateProvider AuthenticationStateProvider


@if (IsFields == true)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <strong>Something went wrong!</strong>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<body style="background: linear-gradient(to right, rgba(106, 17, 203, 1), rgba(37, 117, 252, 1));">
    <div>
        <EditForm Model="userDto" OnValidSubmit="HandleRegistration">

            <DataAnnotationsValidator />
            <ValidationSummary />

            <section class="vh-20 gradient-custom">
                <div class="container py-16 h-40 " style="height:auto">
                    <!-- Changed height to h-50 -->
                    <div class="row d-flex justify-content-center align-items-center ">
                        <div class="col-12 col-md-8 col-lg-6 col-md-5">
                            <div class="card bg-dark text-white" style="border-radius: 1rem;height:40%!important">
                                <div class="card-body p-5 text-center">
                                    <div class="mb-md-5 mt-md-4">

                                        <h2 class="fw-bold mb-2 text-uppercase">Login</h2>
                                        <p class="text-white-50 mb-2">Please enter your Email and password!</p>

                                        <div class="form-outline form-white mb-2">
                                            <label class="form-label" for="typeEmailX">Email</label>
                                            <InputText @bind-Value="userDto.Email" class="form-control" />
                                        </div>

                                        <div class="form-outline form-white mb-2">
                                            <label class="form-label" for="typePasswordX">Password</label>
                                            <InputText @bind-Value="userDto.Password" class="form-control" />
                                        </div>

                                       


                                    </div>


                                    <br />
                                        <MudButton Variant="Variant.Filled" Color="Color.Success" Link="/Accounts/LogIn" Size="Size.Large" FullWidth="true">Sign In</MudButton>

                                    <br />
                                    <br />
                                    <div class="d-flex justify-content-center text-center mt-2 pt-1">
                                       

                                    <div>
                                        <p class="mb-0">
                                            Don't have an account? <a href="#!" class="text-white-50 fw-bold">Sign Up</a>
                                        </p>

                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
           </div>
            </section>

        </EditForm>
    </div>
</body>
@code {
    LoginDTO userDto = new LoginDTO();
    bool IsFields = false;
    private List<ExterLogin> exterLogins;
   
    protected async Task HandleRegistration()
    {
        var responce = await _authRepo.Login(userDto);
        if (responce)
        {

            _nav.NavigateTo("/personal/dashboard");

        }
        else
        {
            IsFields = true;
        }
    }

    


}

<script>
    window.fbAsyncInit = function () {
        FB.init({
            appId: '683741366531403',
            cookie: true,
            xfbml: true,
            version: '{api-version}'
        });

        FB.AppEvents.logPageView();

    };

    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) { return; }
        js = d.createElement(s); js.id = id;
        js.src = "https://connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));

    FB.getLoginStatus(function (response) {
        statusChangeCallback(response);

        {
            status: 'connected',
                authResponse: {
                accessToken: '...',
                    expiresIn: '...',
                        signedRequest: '...',
                            userID: '...'
            }
        }
    });
</script>