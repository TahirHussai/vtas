@page "/new-customer"
@inject IAuthRepository _authRepo
@inject ILookUpRepository _lookupRepo
@inject ISnackbar Snackbar
@inject NavigationManager _navManager
@using  Sample.DTOS

<style>
    .legend {
        font-family: sans-serif;
        font-size: 14px;
        color: #555555;
        background-color: #ffffff;
        font-weight: normal !important;
        text-align: left !important;
        width: inherit;
        margin-bottom: 0 !important;
        padding: 0 10px;
        border-bottom: none;
    }

    .fieldset {
        font-family: sans-serif;
        color: #555555;
        border: 1px groove #DFDED8 !important;
        padding: 1px 15px 5px 15px !important;
        margin: 0 0 5px 0 !important;
        -webkit-box-shadow: 0px 0px 0px 0px gray;
        box-shadow: 0px 0px 0px 0px gray;
        border-color: #DFDED8 !important;
        border-style: solid !important;
    }
</style>
<fieldset class="fieldset">
    <legend class="legend">  <MudText Align="Align.Center">New Customer</MudText></legend>
<MudContainer MaxWidth="MaxWidth.Large" Class="pa-4">
    <!-- Outer fieldset -->
   

        <MudForm Model="@customerInfo" @ref="form" ValidationDelay="0">

            <!-- Customer Name -->
            <MudTextField Label="Customer Name" @bind-Value="customerInfo.UserName" FullWidth="true" Class="mb-4" />

            <!-- Customer Contact Info -->
            <MudPaper Class="pa-4 mb-4" Outlined="true">

                    <MudGrid>
                        <MudItem xs="12" sm="6" md="2">
                            <MudSelect T="int" @bind-Value="customerInfo.PrefixId" Label="Prefix" FullWidth="true" Variant="Variant.Outlined">
                                @foreach (var item in prefixList)
                                {
                                    <MudSelectItem T="int" Value="@item.PrefixID">@item.PrefixVal</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>

                        <MudItem xs="12" sm="6" md="3">
                            <MudTextField Label="First Name" @bind-Value="customerInfo.FirstName" FullWidth="true" Variant="Variant.Outlined" />
                        </MudItem>

                        <MudItem xs="12" sm="6" md="2">
                            <MudTextField Label="Middle Name" @bind-Value="customerInfo.MiddleName" FullWidth="true" Variant="Variant.Outlined" />
                        </MudItem>

                        <MudItem xs="12" sm="6" md="3">
                            <MudTextField Label="Last Name" @bind-Value="customerInfo.LastName" FullWidth="true" Variant="Variant.Outlined" />
                        </MudItem>

                        <MudItem xs="12" sm="6" md="2">
                            <MudSelect T="int" @bind-Value="customerInfo.SuffixId" Label="Suffix" FullWidth="true" Variant="Variant.Outlined">
                                @foreach (var item in sufixList)
                                {
                                    <MudSelectItem T="int" Value="@item.SuffixID">@item.SuffixVAL</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>

                        <MudItem xs="12" sm="6" md="2">
                            <MudTextField Label="Phone" @bind-Value="customerInfo.Phone" FullWidth="true" Variant="Variant.Outlined" />
                        </MudItem>

                        <MudItem xs="12" sm="6" md="2">
                            <MudTextField Label="Ext." @bind-Value="customerInfo.ExtId" FullWidth="true" Variant="Variant.Outlined" />
                        </MudItem>

                        <MudItem xs="12" sm="6" md="3">
                            <MudTextField Label="Fax" @bind-Value="customerInfo.Fax" FullWidth="true" Variant="Variant.Outlined" />
                        </MudItem>

                        <MudItem xs="12" sm="6" md="3">
                            <MudTextField Label="Email" @bind-Value="customerInfo.Email" FullWidth="true" Variant="Variant.Outlined" />
                        </MudItem>

                        <MudItem xs="12" sm="6" md="2">
                            <MudSelect T="int" @bind-Value="customerInfo.EmailTypeId" Label="Email Type" FullWidth="true" Variant="Variant.Outlined">
                                @foreach (var item in emailTypeList)
                                {
                                    <MudSelectItem T="int" Value="@item.EMAILTYPEID">@item.EMAILTYPEVAL</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>

                        <MudItem xs="12" sm="5">
                            <MudTextField Label="Mailing Address" @bind-Value="customerInfo.MailingAddress" FullWidth="true" Variant="Variant.Outlined" />
                        </MudItem>

                        <MudItem xs="12" sm="5">
                            <MudTextField Label="Address 2" @bind-Value="customerInfo.Address2" FullWidth="true" Variant="Variant.Outlined" />
                        </MudItem>

                        <MudItem xs="12" sm="6" md="2">
                            <MudSelect T="int" @bind-Value="customerInfo.AddressTypeId" Label="Address Type" FullWidth="true" Variant="Variant.Outlined">
                                @foreach (var item in addressTypeList)
                                {
                                    <MudSelectItem T="int" Value="@item.AddressTypeID">@item.AddressTypeVAL</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>

                        <MudItem xs="12" sm="6">
                            <MudTextField Label="City" @bind-Value="customerInfo.City" FullWidth="true" Variant="Variant.Outlined" />
                        </MudItem>

                        <MudItem xs="12" sm="3">
                            <MudSelect Label="State" @bind-Value="customerInfo.StateId" FullWidth="true" Variant="Variant.Outlined">
                                <!-- Add more options as needed -->
                                @* <MudSelectItem Value="CA">CA</MudSelectItem>
                                <MudSelectItem Value="NY">NY</MudSelectItem> *@
                            </MudSelect>
                        </MudItem>

                        <MudItem xs="12" sm="3">
                            <MudTextField Label="Zip Code" @bind-Value="customerInfo.ZipCode" FullWidth="true" Variant="Variant.Outlined" />
                        </MudItem>
                    </MudGrid>
              
            </MudPaper>

            <!-- Card Actions -->
            <MudCardActions>
                <MudSpacer /> <!-- Pushes the buttons to the right -->
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" DropShadow="false" OnClick="@(()=>form.ResetAsync())">Cancel</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="HandleSubmit" Style="margin-left: 20px;">Submit</MudButton>
            </MudCardActions>

        </MudForm>
 
</MudContainer>
</fieldset>


@code {
    private MudForm form;
    private List<PrefixDto> prefixList = new List<PrefixDto>();
    private List<SufixDto> sufixList = new List<SufixDto>();
    private List<EmailTypeDto> emailTypeList = new List<EmailTypeDto>();
    private List<AddressTypeDto> addressTypeList = new List<AddressTypeDto>();
    private CustomResponseDto response = new  CustomResponseDto();
   
     UserCustomerDto customerInfo = new UserCustomerDto();

    private async Task HandleSubmit()
    {

        var response = await _authRepo.RegisterCustomer(customerInfo);

        if (response.IsSuccess)
        {

            Snackbar.Add(response.Message, MudBlazor.Severity.Success);
            _navManager.NavigateTo("/cardlist");
        }
        else
        {
            Snackbar.Add(response.Message, MudBlazor.Severity.Warning);
        }
    }
    protected override async Task OnInitializedAsync()
    {
        prefixList = await _lookupRepo.GetPrefix();
        sufixList = await _lookupRepo.GetSuffix();
        emailTypeList = await _lookupRepo.GetEmailType();
        addressTypeList = await _lookupRepo.GetAddressType();
    }
    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
{
        new BreadcrumbItem("Manage", href: "/new-customer"),
        new BreadcrumbItem("Customer", href: "/new-customer"),
    };
}
